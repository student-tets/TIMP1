## Коллекции
# Есть список из чисел
# найдите сумму только положительных чисел в нем.

# Например,
# [1,-4,7,12] -> 1 + 7 + 12 = 20

# Примечание:
# если положительных чисел в списке нет, то сумма равн а 0.

# Вариант 1

a = [1, -17, 7, 100, 8, -1000]

res = 0
for x in a:
    if x > 0:
        res = res + x

print(sum)

# Вариант 2
b = [1, -4, 7, 12]
more_then_ziro = [i for i in b if i > 0]
print(f'Сумма положительных: {sum(more_then_ziro)}')

# Как применить это же рещение для другого списка?
# Нужно написать функцию
# функция это вызываемый блок кода

b = [1, -4, 7, 12]


# этап объявления функции
def sum_positive(numbers):
    res = 0
    for x in numbers:
        if x > 0:
            res = res + x
    # print(res)
    return res


# этап вызова функции
print(sum_positive(b)**2)

# ##### Задача 2
# Создайте список списков населения любых городов
# Количество элементов в списке "города" не меньше 3!

# создайте пары из данных
# ['Город', колво населения]

population = [
    ['Москва', 13104000],
    ['Воронеж', 1051000],
    ["Казань", 1308660],
    ['Иркутск', 611215],
    ['Санкт-Петербург', 5384342],
    ['Новосибирск', 1620162],
    ['Екатеринбург', 1495166],
    ['Нижний Новгород', 1244254],
    ['Челябинск', 1187961],
    ['Самара', 1144759],
]

# a. Выведите на консоль население второго города в списке в формате
# Население Москвы - ХХ человек

# # многоуровневая индексация
# print(population[1][1])
# print(population[2][1])
# print(population[1][0])
# print(population[-1][1])

# b. Выведите на консоль общий размер населения перечисленных городов как сумму населения всех городов
# Итого размер населения - ХХ человек

print(res)


def get_population(people):
    """
    Функция возвращает общее количество населения
    """
    res = 0
    for i in people:
        res = res + i[1]
    # print(res)
    return res


print(get_population(population))
print(get_population([['рим', 1234234], ['монако', 1262277]]))
